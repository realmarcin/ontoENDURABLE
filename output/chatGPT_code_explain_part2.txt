This is the second part of the code and it includes the ResNet class and its subclasses such as ResNet9, ResNet18, ResNet26, ResNet34, and ResNet50.
The ResNet class is a subclass of the nn.Module class and it implements the ResNet architecture. It has several methods that help create the ResNet architecture, including the _make_layer() method, which creates a layer of residual blocks and the _forward_impl() method, which defines the forward pass of the network. It also has a reconfigure_outputs() method that allows for reconfiguring the final layer of the network to produce more outputs.
The ResNet class takes a hparams argument, which is an object of the argparse.Namespace class, and a **kwargs argument, which accepts any number of keyword arguments. The hparams argument contains hyperparameters for the network such as the number of classes, the learning rate, and the batch size.
The ResNet class has several subclasses, including ResNet9, ResNet18, ResNet26, ResNet34, and ResNet50. These subclasses define the number and types of residual blocks used in the ResNet architecture. For example, ResNet18 uses 2 BasicBlock layers for each of the 4 layers in the network, while ResNet50 uses 3 Bottleneck layers for each of the 4 layers. The subclasses override the init() method of the ResNet class and specify the hparams and **kwargs arguments as well as the block type and number of layers for the network.
The model decorator is used to register the ResNet subclasses so that they can be easily instantiated using a string argument. For example, ResNet9 can be instantiated using the string argument 'resnet9'.
