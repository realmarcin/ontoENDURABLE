This code defines several classes and functions related to building a ResNet model using PyTorch.
conv3x3 and conv1x1 are helper functions that create 1-dimensional convolutional layers with 3x3 and 1x1 kernel sizes, respectively.
BasicBlock and Bottleneck are two types of residual blocks used in the ResNet architecture. The BasicBlock consists of two convolutional layers with 3x3 kernel sizes and a shortcut connection that adds the input tensor to the output tensor. The Bottleneck block consists of three convolutional layers with 1x1, 3x3, and 1x1 kernel sizes, respectively, and also has a shortcut connection that adds the input tensor to the output tensor.
FeatureReduction is a class that reduces the dimensionality of the input features using a 1x1 convolutional layer.
ResNet is a class that implements the ResNet architecture using the blocks defined above. It inherits from AbstractLit, which is a custom abstract base class for PyTorch Lightning, a lightweight PyTorch wrapper for high-performance AI research. The ResNet constructor initializes various hyperparameters that determine the architecture of the ResNet model, including the number of groups, width per group, and whether to use bottleneck blocks or a simpler classification head.
